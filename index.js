require('dotenv').config();
const express = require("express");
const bodyParser = require("body-parser");
const TelegramBot = require("node-telegram-bot-api");
const BOT_TOKEN = process.env.BOT_TOKEN;
const bot = new TelegramBot(BOT_TOKEN);
const axios = require('axios');

const app = express();
app.use(bodyParser.json());

const PORT = 3000;

bot.setWebHook(`https://bizimillyat-bot.onrender.com/${BOT_TOKEN}`)
    .then(() => console.log("–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–µ–Ω"))
    .catch((err) => {
        console.error("–û—à–∏–±–∫–∞:", err);
        process.exit(1);
    });

app.post(`/${BOT_TOKEN}`, (req, res) => {
    const update = req.body;
    bot.processUpdate(update);
    res.sendStatus(200);
});

function getRandomPhrase(phrases) {
    const randomIndex = Math.floor(Math.random() * phrases.length);
    return phrases[randomIndex];
}
const greetings = [
    "–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–æ—Ä–æ–≥–æ–π!",
    "–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {name}, —É–≤–∏–¥–µ–ª —Ç–µ–±—è –∏ —Å—Ä–∞–∑—É —Å—Ç–∞–ª–æ –ª—É—á—à–µ!",
    "–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
    "–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {name}! –ü—Ä–æ—Ö–æ–¥–∏, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è!",
    "–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {name}! –ö–∞–∫ —Ç—ã? –£–≤–∏–¥–µ–≤ —Ç–µ–±—è, —è —Å—Ç–∞–ª —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ!"
];

const activeCheck = [
    "{name}, —Ç—ã –∑–¥–µ—Å—å?",
    "{name}, –Ω–µ –ø—Ä–æ–ø–∞–¥–∞–π, –æ—Ç–≤–µ—Ç—å!",
    "–≠–π, {name}, —Ç—ã —Å –Ω–∞–º–∏? –ñ–¥—É –æ—Ç–≤–µ—Ç–∞!",
    "{name}, —Ç—ã —Ç—É—Ç? –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!"
];

const thankYouMessages = [
    "–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ, {name}, –ø–æ–ª—É—á–∏–ª —Ç–≤–æ–π –æ—Ç–≤–µ—Ç, —Ç—ã —Å—É–ø–µ—Ä!",
    "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ—Ç–≤–µ—Ç, {name}!",
    "{name}, —Å–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ —Ç–≤–æ–π –æ—Ç–≤–µ—Ç!",
    "–ö–∞–∫ —Ö–æ—Ä–æ—à–æ, —á—Ç–æ —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª, {name}!"
];

const leaveMessages = [
    "–û—Ö, {name} –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å...",
    "{name}, –ø—Ä–æ—â–∞–π, –¥–æ –≤—Å—Ç—Ä–µ—á–∏!",
    "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {name}. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â—ë!",
    "–ñ–∞–ª—å, —á—Ç–æ {name} –±–æ–ª—å—à–µ —Å –Ω–∞–º–∏ –Ω–µ—Ç."
];

function wait(sec) {
    return new Promise((resolve) => {
        setTimeout(resolve, sec * 1000);
    });
}

let awaitingResponses = {};
const INACTIVITY_PERIOD = 2 * 24 * 60 * 60 * 1000;

async function checkUserActivity() {
    const now = Date.now();

    for (const userId in awaitingResponses) {
        const userData = awaitingResponses[userId];
        const lastActivityTime = userData.lastActiveTime || now;

        if (now - lastActivityTime > INACTIVITY_PERIOD) {
            const chatId = userData.chatId;
            const message = `–ü—Ä–∏–≤–µ—Ç, ${userData.first_name}!  –ì–¥–µ —Ç—ã? –£–∂–µ –¥–≤–∞ –¥–Ω—è —Ç–µ–±—è –Ω–µ –≤–∏–¥–Ω–æ, –≤—Å—ë –ª–∏ –≤ –ø–æ—Ä—è–¥–∫–µ?`;
            await bot.sendMessage(chatId, message);
            delete awaitingResponses[userId];
        }
    }
}

setInterval(checkUserActivity, 12 * 60 * 60 * 1000);

bot.on('new_chat_members', async (msg) => {
    const newMember = msg.new_chat_member;
    const chatId = msg.chat.id;

    await wait(5);

    let memberTag;
    if (newMember.username) {
        memberTag = `@${newMember.username}`;
    } else {
        memberTag = `[${newMember.first_name}](tg://user?id=${newMember.id})`;
    }
    const welcomeMessage = getRandomPhrase(greetings).replace("{name}", memberTag);
    bot.sendMessage(chatId, welcomeMessage, { parse_mode: 'Markdown' });

    awaitingResponses[newMember.id] = {
        chatId: chatId,
        first_name: newMember.first_name,
        lastActiveTime: Date.now(),
        timeout: setTimeout(async () => {
            const chatMember = await bot.getChatMember(chatId, newMember.id);

            if (chatMember.status === 'member') {
                const checkMessage = getRandomPhrase(activeCheck).replace("{name}", memberTag);
                bot.sendMessage(chatId, checkMessage, { parse_mode: 'Markdown' });

                awaitingResponses[newMember.id].kickTimeout = setTimeout(async () => {
                    const chatMember = await bot.getChatMember(chatId, newMember.id);
                    if (chatMember.status === 'member') {
                        bot.kickChatMember(chatId, newMember.id);
                        bot.sendMessage(chatId, `${newMember.first_name}, –¥–∞–≤–∞–π, –¥—Ä—É–∂–∏—â–µ, —Ç—ã —Ö–æ—Ç—è –±—ã –ø–æ–∑–¥–æ—Ä–æ–≤–∞–π—Å—è!.`);
                        delete awaitingResponses[newMember.id];
                    }
                }, 1200000);
            }
        }, 10000)
    };
});
;

bot.on('message', (msg) => {
    const userId = msg.from.id;
    const chatId = msg.chat.id;

    if (awaitingResponses[userId] && awaitingResponses[userId].chatId === chatId) {
        clearTimeout(awaitingResponses[userId].timeout);
        clearTimeout(awaitingResponses[userId].kickTimeout);

        const thankYouMessage = getRandomPhrase(thankYouMessages).replace("{name}", msg.from.first_name);
        bot.sendMessage(chatId, thankYouMessage);
        awaitingResponses[userId].lastActiveTime = Date.now();

        delete awaitingResponses[userId];
    }
});

bot.on('left_chat_member', (msg) => {
    const leftMember = msg.left_chat_member;
    const chatId = msg.chat.id;
    const userId = leftMember.id;

    if (awaitingResponses[userId]) {
        clearTimeout(awaitingResponses[userId].timeout);
        clearTimeout(awaitingResponses[userId].kickTimeout);
        delete awaitingResponses[userId];
    }

    const leaveMessage = getRandomPhrase(leaveMessages).replace("{name}", leftMember.first_name);
    bot.sendMessage(chatId, leaveMessage);
});


bot.onText(/\/–ø–æ–º–æ—â—å/, (msg) => {
    const chatId = msg.chat.id;

    const helpMessage = `
    –ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º! –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:
    1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.
    2. –ü—Ä–æ–≤–µ—Ä—è—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ —Å–µ–±–µ, –µ—Å–ª–∏ —Ç—ã –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—à—å.
    3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –ø—Ä–æ—è–≤–ª—è—é—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —á–∞—Ç.
    4. –û—Ç–ø—Ä–∞–≤–ª—è—é –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.
    5. –§–∏–∫—Å–∏—Ä—É—é, –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–¥–∞–µ—Ç —á–∞—Ç.
    6. –ü–æ–∫–∞–∑—ã–≤–∞—é —Ü–∏—Ç–∞—Ç—ã –î–∂–µ–π—Å–æ–Ω–∞ –°—Ç—ç—Ç—Ö–µ–º–∞ - /—Ü–∏—Ç–∞—Ç–∞.
    
    –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ —Å—é–¥–∞!    
`;

    bot.sendMessage(chatId, helpMessage);
});

const stathamQuotes = [
    "–ù–∞—Å—Ç–æ—è—â–∏–π –º—É–∂—á–∏–Ω–∞ –Ω–µ –ø–ª–∞—á–µ—Ç. –û–Ω –∏–¥—ë—Ç –ø–∏—Ç—å —á–∞–π —Å –≤–∞—Ä–µ–Ω—å–µ–º.",
    "–ù–µ –æ—à–∏–±–∞–µ—Ç—Å—è —Ç–æ—Ç, –∫—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç. –ò –¥–∞–∂–µ –æ–Ω –∏–Ω–æ–≥–¥–∞ –æ—à–∏–±–∞–µ—Ç—Å—è.",
    "–ß—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞, –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∞—Ç—å –ø–æ—Ä–∞–Ω—å—à–µ... –∏ —Å—Ä–∞–∑—É –ª–æ–∂–∏—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ.",
    "–ú—É–¥—Ä–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å –æ–ø—ã—Ç–æ–º, –Ω–æ –∏–Ω–æ–≥–¥–∞ –æ–ø—ã—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ–¥–∏–Ω.",
    "–ó–Ω–∞–Ω–∏—è ‚Äî —ç—Ç–æ —Å–∏–ª–∞. –ê —Å–∏–ª–∞ ‚Äî —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—å –±–∞–Ω–∫—É –æ–≥—É—Ä—Ü–æ–≤.",
    "–õ—É—á—à–µ –ø–æ–∑–¥–Ω–æ, —á–µ–º –µ—â—ë –ø–æ–∑–∂–µ.",
    "–ï—Å–ª–∏ —Ç—ã –≤—Å—Ç–∞–ª –Ω–µ —Å —Ç–æ–π –Ω–æ–≥–∏, —Ç–æ –ª—è–≥ –æ–±—Ä–∞—Ç–Ω–æ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.",
    "–ù–∞—Å—Ç–æ—è—â–∏–π –º—É–∂—á–∏–Ω–∞ –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—Ç... –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–±—ã–≤–∞–µ—Ç –æ–± —ç—Ç–æ–º —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.",
    "–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –±–æ—Ä—å–±–∞, –Ω–æ –∏ –æ–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤.",
    "–°–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–ª—è—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä... –µ—Å–ª–∏ —Ç—ã, –∫–æ–Ω–µ—á–Ω–æ, –∏—Ö –ø–µ—Ä–µ–∂–∏–ª.",
    "–ö—Ç–æ –∏—â–µ—Ç —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏, —Ç–æ—Ç –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —É–∂–∏–Ω.",
    "–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –ø–æ–±–µ–¥–∏—Ç—å ‚Äî –ø—Ä–∏—Ç–≤–æ—Ä–∏—Å—å, —á—Ç–æ —Ç—ã –≤–æ–æ–±—â–µ –Ω–µ –ø—Ä–∏ –¥–µ–ª–∞—Ö.",
    "–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–±—ã–ª, —á—Ç–æ —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–Ω–æ–π, –∏ –ø–æ—à—ë–ª –Ω–∞ —Ä–∞–±–æ—Ç—É.",
    "–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –º–æ–ª–æ–¥—ã–º, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ø–∞—Å–ø–æ—Ä—Ç.",
    "–°–Ω–∞—á–∞–ª–∞ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—é, –∞ –ø–æ—Ç–æ–º –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ç–µ–±—è... –µ—Å–ª–∏ –ø–æ–≤–µ–∑—ë—Ç.",
    "–û–ø—ã—Ç ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–±—É–¥–µ—à—å –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ.",
    "–£ –∫–æ–≥–æ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π, —É –≤—Å–µ—Ö ¬´–Ω–æ—Ä–º–∞–ª—å–Ω–æ¬ª.",
    "–ü–ª–∞–Ω –±—ã–ª –∏–¥–µ–∞–ª—å–Ω—ã–π, –Ω–æ –∏–¥–µ–∞–ª—å–Ω–æ—Å—Ç—å —Ä–µ—à–∏–ª–∞ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å."
];

const sunnahTipsFull = [
    "üïå –£–ª—ã–±–∞–π—Å—è –±—Ä–∞—Ç—É —Å–≤–æ–µ–º—É ‚Äî —ç—Ç–æ —Å–∞–¥–∞–∫–∞. (–ü—Ä–æ—Ä–æ–∫ Ô∑∫)",
    "üìø –£–ø—Ä–æ—â–∞–π –¥–µ–ª–∞ –¥—Ä—É–≥–∏–º ‚Äî –∏ –ê–ª–ª–∞—Ö —É–ø—Ä–æ—Å—Ç–∏—Ç —Ç–≤–æ–∏.",
    "üåô –ß—Ç–µ–Ω–∏–µ –ê—è—Ç –∞–ª—å-–ö—É—Ä—Å–∏ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º ‚Äî –∑–∞—â–∏—Ç–∞ –¥–æ —É—Ç—Ä–∞.",
    "üìñ –ö–∞–∂–¥—ã–π —à–∞–≥ –∫ –º–µ—á–µ—Ç–∏ ‚Äî —ç—Ç–æ –ø—Ä–æ—â–µ–Ω–∏–µ –≥—Ä–µ—Ö–∞.",
    "ü§ù –ù–∞—á–∏–Ω–∞–π —Å —Å–∞–ª–∞–º–∞ –ø–µ—Ä–≤—ã–º ‚Äî —ç—Ç–æ –±–ª–∏–∂–µ –∫ —Ç–∞q—É–∞.",
    "üßº –°–æ–≤–µ—Ä—à–∞–π —Ç–∞—Ö–∞—Ä–∞—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –º–æ–ª–∏—Ç—å—Å—è ‚Äî –æ—á–∏—â–∞–µ—Ç –≥—Ä–µ—Ö–∏.",
    "üïã –ü–æ—Å—Ç –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏ —á–µ—Ç–≤–µ—Ä–≥ ‚Äî —Å—É–Ω–Ω–∞ –∏ –ø—Ä–æ—â–µ–Ω–∏–µ.",
    "üçΩ –ï—à—å –ø—Ä–∞–≤–æ–π —Ä—É–∫–æ–π –∏ –≥–æ–≤–æ—Ä–∏ '–ë–∏—Å–º–∏–ª–ª—è—Ö'.",
    "üïØ –£–º–µ–π –ø—Ä–æ—â–∞—Ç—å ‚Äî —ç—Ç–æ –∫–∞—á–µ—Å—Ç–≤–æ –ª—É—á—à–∏—Ö –∏–∑ —É–º–º—ã.",
    "üí¨ –ì–æ–≤–æ—Ä–∏ –±–ª–∞–≥–æ–µ –∏–ª–∏ –º–æ–ª—á–∏.",
    "üåô –î–µ–ª–∞–π —Ç–∞—Ö–∞–¥–∂—É–¥ ‚Äî –æ—Å–æ–±–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –ê–ª–ª–∞—Ö—É.",
    "üíå –î–µ–ª–∞–π –¥—É–∞ –∑–∞ –¥—Ä—É–≥–∏—Ö ‚Äî –∞–Ω–≥–µ–ª —Å–∫–∞–∂–µ—Ç '–∏ —Ç–µ–±–µ —Ç–æ–≥–æ –∂–µ'.",
    "üè• –ù–∞–≤–µ—â–∞–π –±–æ–ª—å–Ω—ã—Ö ‚Äî —ç—Ç–æ –æ—á–∏—â–µ–Ω–∏–µ –¥—É—à–∏.",
    "üßï –ü–æ—Ä—è–¥–æ–∫ –∏ —á–∏—Å—Ç–æ—Ç–∞ ‚Äî —á–∞—Å—Ç—å –≤–µ—Ä—ã.",
    "üìø –ü–æ—Å–ª–µ –Ω–∞–º–∞–∑–∞ —á–∏—Ç–∞–π: –°—É–±—Ö–∞–Ω–ê–ª–ª–∞—Ö (33), –ê–ª—å—Ö–∞–º–¥—É–ª–∏–ª–ª—è—Ö (33), –ê–ª–ª–∞—Ö—É –ê–∫–±–∞—Ä (34).",
    "üìö –ò–∑—É—á–µ–Ω–∏–µ —Ä–µ–ª–∏–≥–∏–∏ ‚Äî –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω–∞.",
    "üõè –ß–∏—Ç–∞–π –ø–µ—Ä–µ–¥ —Å–Ω–æ–º: —Å—É—Ä–∞ –ê–ª—å-–ú—É–ª—å–∫, 3 –∫—É–ª, –∞—è—Ç –∞–ª—å-–ö—É—Ä—Å–∏.",
    "üïä –ü–æ–º–Ω–∏: –≤ –†–∞—é –Ω–µ –≤–æ–π–¥—ë—Ç —Ç–æ—Ç, —É –∫–æ–≥–æ –≤ —Å–µ—Ä–¥—Ü–µ –≥–æ—Ä–¥—ã–Ω—è.",
    "üß† –°–æ–≤–µ—Ç—ã ‚Äî –º–∏–ª–æ—Å—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –∂—ë—Å—Ç–∫–∏–µ.",
    "üéØ –ù–∞–º–µ—Ä–µ–Ω–∏–µ ‚Äî –æ—Å–Ω–æ–≤–∞ –ª—é–±–æ–≥–æ –¥–µ–ª–∞. ¬´–ü–æ–∏—Å—Ç–∏–Ω–µ, –¥–µ—è–Ω–∏—è –ø–æ –Ω–∞–º–µ—Ä–µ–Ω–∏—è–º¬ª.",
    "üïä –ü–æ–º–æ–≥–∞–π —Ä–æ–¥–∏—Ç–µ–ª—è–º ‚Äî –¥–æ–≤–æ–ª—å—Å—Ç–≤–æ –ê–ª–ª–∞—Ö–∞ –≤ –¥–æ–≤–æ–ª—å—Å—Ç–≤–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π.",
    "ü§≤ –î–µ–ª–∞–π –∏—Å–∫—Ä–µ–Ω–Ω–µ–µ –¥—É–∞ ‚Äî –ê–ª–ª–∞—Ö —Å—Ç–µ—Å–Ω—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ä–≥–Ω—É—Ç—å —Ä—É–∫–∏, –ø–æ–¥–Ω—è—Ç—ã–µ –∫ –ù–µ–º—É.",
    "üïå –ù–∞–º–∞–∑ –≤–æ–≤—Ä–µ–º—è ‚Äî —Å–∞–º–æ–µ –ª—é–±–∏–º–æ–µ –¥–µ–ª–æ –ø–µ—Ä–µ–¥ –ê–ª–ª–∞—Ö–æ–º.",
    "üï∞ –°—á–∏—Ç–∞–π –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –∫–∞–∫ —à–∞–Ω—Å –Ω–∞ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –î–∂–∞–Ω–Ω–∞.",
    "üßï –°–º–æ—Ç—Ä–∏ –Ω–∞ —Ö–∞—Ä–∞–º ‚Äî —ç—Ç–æ —Å—Ç—Ä–µ–ª–∞ —à–∞–π—Ç–∞–Ω–∞. –ë–µ—Ä–µ–≥–∏ –≤–∑–≥–ª—è–¥.",
    "üó£ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π —Å–ø–ª–µ—Ç–Ω–∏ ‚Äî —ç—Ç–æ —Ä–∞–∑—Ä—É—à–∞–µ—Ç –±—Ä–∞—Ç—Å—Ç–≤–æ.",
    "üíî –ù–µ —Å–º–µ–π—Å—è –Ω–∞–¥ –¥—Ä—É–≥–∏–º–∏ ‚Äî –º–æ–∂–µ—Ç, –æ–Ω–∏ –ª—É—á—à–µ —Ç–µ–±—è –ø–µ—Ä–µ–¥ –ê–ª–ª–∞—Ö–æ–º.",
    "üìø –ù–µ –∑–∞–±—ã–≤–∞–π –∑–∏–∫—Ä –¥–∞–∂–µ –≤ –ø—É—Ç–∏ ‚Äî —ç—Ç–æ –±—Ä–æ–Ω—è —Å–µ—Ä–¥—Ü–∞.",
    "üì¶ –î–∞—Ä–∏ –ø–æ–¥–∞—Ä–∫–∏ ‚Äî –æ–Ω–∏ —É–∫—Ä–µ–ø–ª—è—é—Ç –ª—é–±–æ–≤—å –º–µ–∂–¥—É –≤–µ—Ä—É—é—â–∏–º–∏.",
    "üö™ –ü—Ä–æ—Å–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –≤—Ö–æ–¥–µ ‚Äî —ç—Ç–æ —á–∞—Å—Ç—å –∞–¥–∞–±–∞ (—ç—Ç–∏–∫–µ—Ç–∞).",
    "üåø –¢–µ—Ä–ø–∏ –≤ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ ‚Äî —Ç–µ—Ä–ø–µ–Ω–∏–µ ‚Äî –∫–ª—é—á –∫ –ø–æ–±–µ–¥–µ.",
    "üí≠ –ü–æ–º–Ω–∏ —Å–º–µ—Ä—Ç—å ‚Äî —ç—Ç–æ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–π, –Ω–æ –æ—á–∏—â–µ–Ω–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π.",
    "üßï –°–∫—Ä—ã–≤–∞–π —á—É–∂–∏–µ –≥—Ä–µ—Ö–∏ ‚Äî –∏ –ê–ª–ª–∞—Ö —Å–∫—Ä–æ–µ—Ç —Ç–≤–æ–∏ –≤ –°—É–¥–Ω—ã–π –¥–µ–Ω—å.",
    "üßì –£–≤–∞–∂–∞–π —Å—Ç–∞—Ä—à–∏—Ö ‚Äî —ç—Ç–æ –∏–∑ —Å—É–Ω–Ω—ã –∏ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è –≤–µ—Ä—É—é—â–µ–≥–æ.",
    "üë∂ –ë—É–¥—å –º—è–≥–∫–∏–º —Å –º–ª–∞–¥—à–∏–º–∏ ‚Äî –ü—Ä–æ—Ä–æ–∫ Ô∑∫ –±—ã–ª —Å–∞–º—ã–º –ª–∞—Å–∫–æ–≤—ã–º —Å –¥–µ—Ç—å–º–∏.",
    "üîÅ –°–æ–≤–µ—Ä—à–∞–π —Ç–∞—É–±–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –Ω–µ —Å–æ–≥—Ä–µ—à–∏–ª.",
    "üåÖ –î–µ–ª–∞–π —É—Ç—Ä–µ–Ω–Ω–∏–µ –∞–∑–∫–∞—Ä—ã ‚Äî —ç—Ç–æ –∑–∞—â–∏—Ç–∞ –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å.",
    "üåá –í–µ—á–µ—Ä–Ω–∏–µ –∑–∏–∫—Ä—ã ‚Äî —â–∏—Ç –æ—Ç –≤—Å–µ–≥–æ –¥—É—Ä–Ω–æ–≥–æ –¥–æ —É—Ç—Ä–∞.",
    "üß≠ –ü—Ä–æ—Å–∏ —É –ê–ª–ª–∞—Ö–∞ –∏—Å—Ç–∏—Ö–∞—Ä—É ‚Äî –∫–æ–≥–¥–∞ –Ω–µ –∑–Ω–∞–µ—à—å, –∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å.",
    "üí¨ –ì–æ–≤–æ—Ä–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å —Ö–æ—Ä–æ—à–∏–º –Ω—Ä–∞–≤–æ–º ‚Äî –∞—Ö–ª—è–∫ ‚Äî –ø–æ–ª–æ–≤–∏–Ω–∞ –≤–µ—Ä—ã."
];
bot.onText(/\/—Å–æ–≤–µ—Ç/, (msg) => {
    const chatId = msg.chat.id;
    const tip = getRandomPhrase(sunnahTipsFull);
    bot.sendMessage(chatId, tip);
});


bot.onText(/\/—Ü–∏—Ç–∞—Ç–∞/, (msg) => {
    const chatId = msg.chat.id;
    const randomQuote = getRandomPhrase(stathamQuotes);
    bot.sendMessage(chatId, randomQuote);
});

bot.onText(/\/—Å—Ç–∞—Ä—Ç/, (msg) => {
    const chatId = msg.chat.id;

    const options = {
        reply_markup: {
            inline_keyboard: [
                [{ text: "–ü–æ–º–æ—â—å", callback_data: 'help' }],
                [{ text: "–¶–∏—Ç–∞—Ç–∞", callback_data: 'quote' }]
            ]
        }
    };

    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', options);
});

bot.on('callback_query', (callbackQuery) => {
    const message = callbackQuery.message;
    const data = callbackQuery.data;

    if (data === 'help') {
        bot.sendMessage(message.chat.id, `
–°–∞–ª–∞–º –∞–ª–µ–π–∫—É–º! –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:
1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.
2. –ü—Ä–æ–≤–µ—Ä—è—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ —Å–µ–±–µ, –µ—Å–ª–∏ —Ç—ã –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—à—å.
3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –ø—Ä–æ—è–≤–ª—è—é—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —á–∞—Ç.
4. –û—Ç–ø—Ä–∞–≤–ª—è—é –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.
5. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é, –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–¥–∞–µ—Ç —á–∞—Ç.
6. –ö–∏–¥–∞—é —Ü–∏—Ç–∞—Ç—ã —Å—Ç–µ—Ç—Ö–µ–º–∞ - /—Ü–∏—Ç–∞—Ç–∞
–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ —Å—é–¥–∞!
        `);
    } else if (data === 'quote') {
        const randomQuote = getRandomPhrase(stathamQuotes);
        bot.sendMessage(message.chat.id, randomQuote);
    }
});


app.listen(PORT, () => {
    console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
